name: CMake on a single platform

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

  # Specify VTK and ITK versions separately
  VTK_MAJOR: 9
  VTK_MINOR: 3
  VTK_PATCH: 0

  ITK_MAJOR: 5
  ITK_MINOR: 3
  ITK_PATCH: 0

  # Construct full version strings
  VTK_VERSION: ${{ env.VTK_MAJOR }}.${{ env.VTK_MINOR }}.${{ env.VTK_PATCH }}
  ITK_VERSION: ${{ env.ITK_MAJOR }}.${{ env.ITK_MINOR }}.${{ env.ITK_PATCH }}

  # Set installation directory
  INSTALL_DIR: ${{ github.workspace }}/install

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:

    - uses: actions/checkout@v4

    - name: Install Dependencies
      run: |
        echo "Installing system dependencies..."
        sudo apt update && sudo apt install -y cmake g++ libgl1-mesa-dev libxt-dev libxrender-dev libxext-dev libglu1-mesa-dev make

    ### CACHE & BUILD VTK ###
    - name: Get VTK Git Hash
      id: vtk_hash
      run: echo "VTK_HASH=${{ env.VTK_VERSION }}" >> $GITHUB_ENV

    - name: Cache VTK Build
      id: cache-vtk
      uses: actions/cache@v4
      with:
        path: vtk-build
        key: vtk-${{ runner.os }}-${{ env.BUILD_TYPE }}-${{ env.VTK_HASH }}
        restore-keys: |
          vtk-${{ runner.os }}-${{ env.BUILD_TYPE }}-

    - name: Check VTK Cache
      run: |
        if [ -d "vtk-build" ]; then
          echo "VTK build found in cache. Skipping clone, configure, and build."
          echo "CACHE_HIT=true" >> $GITHUB_ENV
        else
          echo "VTK not found in cache. Proceeding with clone, configure, and build."
          echo "CACHE_HIT=false" >> $GITHUB_ENV
        fi

    - name: Clone VTK
      run: |
        if [ "$CACHE_HIT" == "true" ]; then
          echo "Skipping VTK clone (cache hit)."
        else
          echo "Cloning VTK..."
          git clone https://gitlab.kitware.com/vtk/vtk.git --branch v${{ env.VTK_VERSION }} --depth 1
          mkdir -p vtk-build
        fi

    - name: Configure VTK
      run: |
        if [ "$CACHE_HIT" == "true" ]; then
          echo "Skipping VTK configuration (cache hit)."
        else
          echo "Configuring VTK..."
          cmake -S vtk -B vtk-build -DCMAKE_INSTALL_PREFIX=${{ env.INSTALL_DIR }} -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DBUILD_SHARED_LIBS=ON -DVTK_BUILD_TESTING=OFF
        fi

    - name: Build VTK
      run: |
        if [ "$CACHE_HIT" == "true" ]; then
          echo "Skipping VTK build (cache hit)."
        else
          echo "Building VTK..."
          cmake --build vtk-build -- -j$(nproc)
        fi

    - name: Install VTK
      run: |
        echo "Installing VTK..."
        cmake --install vtk-build

    ### CACHE & BUILD ITK ###
    - name: Get ITK Git Hash
      id: itk_hash
      run: echo "ITK_HASH=${{ env.ITK_VERSION }}" >> $GITHUB_ENV

    - name: Cache ITK Build
      id: cache-itk
      uses: actions/cache@v4
      with:
        path: itk-build
        key: itk-${{ runner.os }}-${{ env.BUILD_TYPE }}-${{ env.ITK_HASH }}
        restore-keys: |
          itk-${{ runner.os }}-${{ env.BUILD_TYPE }}-

    - name: Check ITK Cache
      run: |
        if [ -d "itk-build" ]; then
          echo "ITK build found in cache. Skipping clone, configure, and build."
          echo "CACHE_HIT=true" >> $GITHUB_ENV
        else
          echo "ITK not found in cache. Proceeding with clone, configure, and build."
          echo "CACHE_HIT=false" >> $GITHUB_ENV
        fi

    - name: Clone ITK
      run: |
        if [ "$CACHE_HIT" == "true" ]; then
          echo "Skipping ITK clone (cache hit)."
        else
          echo "Cloning ITK..."
          git clone https://github.com/InsightSoftwareConsortium/ITK.git --branch v${{ env.ITK_VERSION }} --depth 1
          mkdir -p itk-build
        fi

    - name: Configure ITK
      run: |
        if [ "$CACHE_HIT" == "true" ]; then
          echo "Skipping ITK configuration (cache hit)."
        else
          echo "Configuring ITK..."
          cmake -S ITK -B itk-build -DCMAKE_INSTALL_PREFIX=${{ env.INSTALL_DIR }} -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DBUILD_SHARED_LIBS=ON -DITK_BUILD_TESTING=OFF
        fi

    - name: Build ITK
      run: |
        if [ "$CACHE_HIT" == "true" ]; then
          echo "Skipping ITK build (cache hit)."
        else
          echo "Building ITK..."
          cmake --build itk-build -- -j$(nproc)
        fi

    - name: Install ITK
      run: |
        echo "Installing ITK..."
        cmake --install itk-build
